{"version":3,"file":null,"sources":["../src/core/init/constructor.js","../src/core/observer/dep.js","../src/core/observer/define-reactive.js","../src/utils/index.js","../src/core/observer/index.js","../src/utils/object.js","../src/utils/string.js","../src/core/init/data.js","../src/core/init/methods.js","../src/core/compiler/utils.js","../src/core/compiler/updater.js","../src/core/watcher/index.js","../src/core/compiler/index.js","../src/core/init/complier.js","../src/core/init/index.js","../src/core/prototype/proxy.js","../src/core/prototype/unproxy.js","../src/core/prototype.js","../src/index.js"],"sourcesContent":["let uid = 0;\n\nexport default function initConstructor(me, options) {\n    me.uid = uid++;\n    me.$options = options;\n    me.$data = {};\n    me.$el = typeof options.el == 'string' ? document.querySelector(options.el) : options.el || document.body;\n    me.me = me;\n}\n","let uid = 0;\n\nexport default class Dep {\n    constructor() {\n        this.id = uid++;\n        this.subs = [];\n    }\n\n    addSub(sub) {\n        // avoid repeated additions\n        if (!this.subs[sub.uid]) this.subs[sub.uid] = sub;\n    }\n\n    depend() {\n        Dep.target.addDep(this);\n    }\n\n    removeSub(sub) {\n        let index = this.subs.indexOf(sub);\n        if (index != -1) this.subs.splice(index, 1);\n    }\n\n    notify() {\n        this.subs.map((sub) => {\n            sub.update();\n        });\n    }\n}\n\nDep.target = null;\n","import Dep from './dep';\n\nexport default function defineReactive(object, key) {\n    let value = object[key],\n        dep = new Dep();\n\n    Object.defineProperty(object, key, {\n        get() {\n            Dep.target && dep.addSub(Dep.target);\n            return value;\n        },\n        set(newValue) {\n            value = newValue;\n            dep.notify();\n        },\n    });\n}\n","export function noop() {}\n\nexport function type(object) {\n    let class2type = {},\n        type = class2type.toString.call(object),\n        typeString = 'Boolean Number String Function Array Date RegExp Object Error Symbol';\n\n    if (object == null) {\n        return object + '';\n    }\n\n    typeString.split(' ').forEach((type) => {\n        class2type[`[object ${type}]`] = type.toLowerCase();\n    });\n\n    return (\n        typeof object === 'object' ||\n        typeof object === 'function' ?\n        class2type[type] || 'object' :\n        typeof object\n    );\n}\n","import defineReactive from './define-reactive';\nimport {\n    type,\n} from './../../utils/index';\n\nexport function observe(data) {\n    if (type(data) != 'object') return;\n\n    for (let key in data) {\n        defineReactive(data, key);\n    }\n}\n","export function isObject(object) {\n    return object !== null && typeof object === 'object';\n}\n\nexport default function extend() {\n    let options, name, clone, copy, source, copyIsArray,\n        target = arguments[0] || {},\n        i = 1,\n        length = arguments.length,\n        deep = false;\n\n    if (typeof target === 'boolean') {\n        deep = target;\n        target = arguments[i] || {};\n        i++;\n    }\n\n    if (typeof target !== 'object') {\n        target = {};\n    }\n\n    for (; i < length; i++) {\n        //\n        if ((options = arguments[i]) !== null) {\n            // for in source object\n            for (name in options) {\n\n                source = target[name];\n                copy = options[name];\n\n                if (target == copy) {\n                    continue;\n                }\n\n                // deep clone\n                if (deep && copy && (typeof copy == 'object' || (copyIsArray = Array.isArray(copy)))) {\n                    // if copy is array\n                    if (copyIsArray) {\n                        copyIsArray = false;\n                        // if is not array, set it to array\n                        clone = source && Array.isArray(source) ? source : [];\n                    } else {\n                        // if copy is not a object, set it to object\n                        clone = source && typeof copy == 'object' ? source : {};\n                    }\n\n                    target[name] = extend(deep, clone, copy);\n                } else if (copy !== undefined) {\n                    target[name] = copy;\n                }\n            }\n        }\n    }\n\n    return target;\n}\n\nexport function isPlainObject(object) {\n    let proto,\n        ctor,\n        class2type = {},\n        toString = class2type.toString, // Object.prototype.toString\n        hasOwn = class2type.hasOwnProperty,\n        fnToString = hasOwn.toString, // Object.toString/Function.toString\n        ObjectFunctionString = fnToString.call(Object); // 'function Object() { [native code] }'\n\n    if (!object || toString.call(object) !== '[object Object]') {\n        return false;\n    }\n\n    // According to the object created by `Object.create(null)` is no `prototype`\n    proto = Object.getPrototypeOf(object);\n    if (!proto) {\n        return true;\n    }\n\n    ctor = hasOwn.call(proto, 'constructor') && proto.constructor;\n    return typeof ctor === 'function' && fnToString.call(ctor) === ObjectFunctionString;\n}\n","export function isReserved(string) {\n    // 0x24: $, 0x5F: _.\n    const char = `${string}`.charCodeAt(0);\n    return char === 0x24 || char === 0x5F;\n}\n","import {\n    observe,\n} from '../observer/index';\nimport {\n    isPlainObject,\n} from '../../utils/object';\nimport {\n    isReserved,\n} from '../../utils/string';\n\nexport default function initData(me) {\n    let data = me.$options.data;\n    data = me.$data = typeof data === 'function' ? data.call(me) : data || {};\n\n    if (!isPlainObject(data)) {\n        data = {};\n        console.log(`options data should return an object.`);\n    }\n\n    const keys = Object.keys(data);\n\n    for (let i = 0; i < keys.length; i++) {\n        if (!isReserved()) me.proxy(`$data`, keys[i]);\n    }\n\n    observe(data);\n}\n","import {\n    noop,\n} from '../../utils/index';\n\nexport default function initMethods(me) {\n    let methods = me.methods;\n    if (methods) {\n        for (const key in methods) {\n            me[key] = methods[key] == null ? noop : (typeof methods[key] == 'function' ? methods[key].bind(me) : '');\n        }\n    }\n}\n","export function parseTextExpression(text) {\n    const regText = /\\{\\{(.+?)\\}\\}/g;\n    let pieces = text.split(regText),\n        matches = text.match(regText),\n        tokens = [];\n\n    pieces.map(piece => {\n        if (matches && matches.indexOf('{{' + piece + '}}') > -1) {\n            tokens.push(piece);\n        } else if (piece) {\n            tokens.push('`' + piece + '`');\n        }\n    });\n    return tokens.join('+');\n}\n\nexport function isDirective(attr) {\n    return attr.indexOf('m-') === 0;\n}\n\nexport function isEventDirective(attr) {\n    return attr.indexOf('on') === 0;\n}\n\nexport function isTextNode(node) {\n    return node.nodeType === 3;\n}\n\nexport function isElementNode(node) {\n    return node.nodeType === 1;\n}\n","// updaters: text, html, model.\n\nexport default {\n    text(node, value) {\n        node.textContent = typeof value == 'undefined' ? '' : value;\n    },\n    html(node, value) {\n        node.innerHtml = typeof value == 'undefined' ? '' : value;\n    },\n    model(node, value) {\n        node.value = typeof value == 'undefined' ? '' : value;\n    },\n};\n","import Dep from '../observer/dep';\n\nlet uid = 0;\n\nexport default class Watcher {\n    constructor(me, expression, callback) {\n        this.me = me;\n        this.expression = expression;\n        this.callback = callback;\n        this.uid = uid++;\n        this.depIds = {};\n        this.value = this.getValue();\n    }\n\n    update() {\n        let value = this.getValue(),\n            oldValue = this.value;\n\n        if (value != oldValue) {\n            this.value = value;\n            this.callback.call(this.me, value, oldValue);\n        }\n    }\n\n    getValue() {\n        Dep.target = this;\n        let value = this.getData();\n        Dep.target = null;\n        return value;\n    }\n\n    getData() {\n        let expressions = this.expression.split('.'),\n            data = this.me.$data;\n\n        expressions.map(expression => {\n            data = data[expression];\n        });\n\n        return data;\n    }\n\n    addDep(dep) {\n        if (!this.depIds.hasOwnProperty(dep.id)) {\n            dep.addSub(this);\n            this.depIds[dep.id] = dep;\n        }\n    }\n}\n","import {\n    parseTextExpression,\n    isDirective,\n    isEventDirective,\n    isTextNode,\n    isElementNode,\n} from './utils';\nimport updater from './updater';\nimport Watcher from '../watcher/index';\n\nexport default class Compiler {\n    constructor(me, el) {\n        this.$el = typeof el == 'string' ? document.querySelector(el) : el || document.body;\n        this.me = me;\n\n        if (this.$el) {\n            this.$fragment = this.nodeToFragment(this.$el);\n            this.compileNodes(this.$fragment);\n            this.$el.appendChild(this.$fragment);\n        }\n    }\n\n    compileNodes(node) {\n        let childNodes = [].slice.call(node.childNodes);\n\n        childNodes.map(node => {\n            if (isTextNode(node)) this.compileTextNodes(node);\n            if (isElementNode(node)) this.compileElementNodes(node);\n            if (node.childNodes && node.childNodes.length) this.compileNodes(node);\n        });\n    }\n\n    compileTextNodes(node) {\n        const text = node.textContent.trim();\n        const regText = /\\{\\{(.+?)\\}\\}/g;\n        if (!text) return;\n        const expression = parseTextExpression(text);\n\n        if (expression.match(regText)) handler['text'](node, this.me, expression);\n    }\n\n    compileElementNodes(node) {\n        let attrs = [].slice.call(node.attributes),\n            attrName = ``,\n            expression = ``,\n            directive = ``;\n\n        attrs.map(attr => {\n            attrName = attr.name;\n            if (isDirective(attrName)) {\n                expression = attr.value;\n                directive = attrName.substring(2);\n\n                if (isEventDirective(directive)) {\n                    handler['event'](node, this.me, expression, directive);\n                } else {\n                    handler[directive] && handler[directive](node, this.me, expression);\n                }\n\n                node.removeAttribute(attrName);\n            }\n        });\n    }\n\n    nodeToFragment(node) {\n        let fragment = document.createDocumentFragment(),\n            child;\n\n        while (child = node.firstChild) {\n            fragment.appendChild(child);\n        }\n\n        return fragment;\n    }\n}\n\nlet handler = {\n    event(node, scope, expression, directive) {\n        let eventType = directive.split(':')[1],\n            fn = scope.$options.methods && scope.$options.methods[expression];\n\n        if (eventType && fn) {\n            node.addEventListener(eventType, fn.bind(scope), false);\n        }\n    },\n    model(node, me, expression) {\n        this.bind(node, me, expression, 'model');\n\n        let value = this.getData(me, expression),\n            newValue = ``;\n\n        node.addEventListener('input', (event) => {\n            newValue = event.target.value;\n            if (value == newValue) return;\n            this.setData(me, expression, newValue);\n            value = newValue;\n        });\n    },\n    text(node, me, expression) {\n        this.bind(node, me, expression, 'text');\n    },\n    bind(node, me, expression, directive) {\n        let updaterFn = updater[directive];\n\n        updaterFn && updaterFn(node, this.getData(me, expression));\n\n        new Watcher(me, expression, function (value, oldValue) {\n            updaterFn && updaterFn(node, value, oldValue);\n        });\n    },\n    getData(me, expression) {\n        let expressions = expression.split('.'),\n            data = me.$data;\n\n        expressions.map(exp => {\n            data = data[exp];\n        });\n\n        return data;\n    },\n    setData(me, expression, newValue) {\n        let expressions = expression.split('.'),\n            data = me.$data,\n            len = expressions.length;\n\n        expressions.map((exp, i) => {\n            if (i < len - 1) {\n                data = data[exp];\n            } else {\n                data[exp] = newValue;\n            }\n        });\n\n        return data;\n    },\n};\n","import Compiler from '../compiler/index';\n\nexport default function initCompiler(me, options) {\n    me.$compiler = new Compiler(me, options.el);\n}\n","import initConstructor from './constructor';\nimport initData from './data';\nimport initMethods from './methods';\nimport initComplier from './complier';\n\nexport default function init(me, options) {\n    initConstructor(me, options);\n    initData(me);\n    initMethods(me);\n    initComplier(me, options);\n}\n","export default function proxy(sourceKey, key) {\n    let self = this;\n\n    Object.defineProperty(self, key, {\n        configurable: true,\n        enumerable: true,\n        get() {\n            return self[sourceKey][key];\n        },\n        set(newVal) {\n            return self[sourceKey][key] = newVal;\n        },\n    });\n}\n","export default function unproxy(sourceKey, key) {\n    delete this[sourceKey][key];\n}\n","import proxy from './prototype/proxy';\nimport unproxy from './prototype/unproxy';\n\nexport default {\n    proxy,\n    unproxy,\n};\n","import init from './core/init/index';\nimport prototype from './core/prototype';\nimport {\n    // parseTextExpression,\n} from './core/compiler/utils';\n\nexport default function Me(options = {}) {\n    if (!(this instanceof Me)) return new Me(options);\n\n    init(this, options);\n}\n\nObject.assign(Me.prototype, prototype);\n\nMe.prototype.constructor = Me;\n"],"names":["uid","initConstructor","me","options","$options","$data","$el","el","document","querySelector","body","Dep","id","subs","sub","target","addDep","index","indexOf","splice","map","update","defineReactive","object","key","value","dep","Object","defineProperty","get","addSub","set","newValue","notify","noop","type","class2type","toString","call","typeString","split","forEach","toLowerCase","observe","data","isPlainObject","proto","ctor","hasOwn","hasOwnProperty","fnToString","ObjectFunctionString","getPrototypeOf","constructor","isReserved","string","char","charCodeAt","initData","console","log","keys","i","length","proxy","initMethods","methods","bind","parseTextExpression","text","regText","pieces","matches","match","tokens","piece","push","join","isDirective","attr","isEventDirective","isTextNode","node","nodeType","isElementNode","textContent","html","innerHtml","model","Watcher","expression","callback","depIds","getValue","oldValue","getData","expressions","Compiler","$fragment","nodeToFragment","compileNodes","appendChild","childNodes","slice","compileTextNodes","compileElementNodes","trim","handler","attrs","attributes","attrName","directive","name","substring","removeAttribute","fragment","createDocumentFragment","child","firstChild","event","scope","eventType","fn","addEventListener","setData","updaterFn","updater","exp","len","initCompiler","$compiler","init","initComplier","sourceKey","self","configurable","enumerable","newVal","unproxy","Me","assign","prototype"],"mappings":"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"}