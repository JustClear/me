{"version":3,"file":null,"sources":["../src/observer/index.js","../src/reactive/index.js","../src/dom/index.js","../src/observer/observeData.js","../src/core/core.js"],"sourcesContent":["// observer\n\nlet callbacks = {};\n\nexport function observe(key, callback) {\n    if (!callbacks[key]) {\n        callbacks[key] = [];\n    }\n\n    callbacks[key].push(callback);\n}\n\nexport function dispatch(key) {\n    if (callbacks && callbacks[key]) {\n        callbacks[key].map(callback => callback());\n    }\n}\n","// reactive\n\nimport { dispatch } from '../observer/index';\n\nexport default function reactive(object, key) {\n    let value = object[key];\n\n    Object.defineProperty(object, key, {\n        get() {\n            return value;\n        },\n        set(newValue) {\n            value = newValue;\n            dispatch(key);\n        },\n    });\n}\n","// dom\n\nimport { observe } from '../observer/index';\n\nexport function observeNode(node, observeable, property) {\n    node.textContent = observeable[property];\n\n    observe(property, () => node.textContent = observeable[property]);\n}\n\nexport function parseDirective(observeable) {\n    let nodes = document.querySelectorAll('[v-text]');\n\n    nodes.forEach(node => {\n        observeNode(node, observeable, node.attributes['v-text'].value);\n    });\n}\n","// observe data\n\nimport reactive from '../reactive/index';\nimport { parseDirective } from '../dom/index';\n\nexport default function observeData(object) {\n    let key;\n\n    for (key in object) {\n        if (object.hasOwnProperty(key)) {\n            reactive(object, key);\n        }\n    }\n\n    parseDirective(object);\n}\n","import observeData from '../observer/observeData';\nimport { observe } from '../observer/index';\n\nfunction Me(options = {}) {\n\n    observeData(options.data);\n\n    return {\n        data: options.data,\n        observe,\n    };\n}\n\nexport default Me;\n"],"names":["observe","key","callback","callbacks","push","dispatch","map","reactive","object","value","defineProperty","newValue","observeNode","node","observeable","property","textContent","parseDirective","nodes","document","querySelectorAll","forEach","attributes","observeData","hasOwnProperty","Me","options","data"],"mappings":"kLAIO,SAASA,GAAQC,EAAKC,GACpBC,EAAUF,OACDA,SAGJA,GAAKG,KAAKF,GAGjB,QAASG,GAASJ,GACjBE,GAAaA,EAAUF,MACbA,GAAKK,IAAI,kBAAYJ,OCVxB,QAASK,GAASC,EAAQP,MACjCQ,GAAQD,EAAOP,UAEZS,eAAeF,EAAQP,wBAEfQ,iBAEPE,KACQA,IACCV,MCTd,QAASW,GAAYC,EAAMC,EAAaC,KACtCC,YAAcF,EAAYC,KAEvBA,EAAU,iBAAMF,GAAKG,YAAcF,EAAYC,KAGpD,QAASE,GAAeH,MACvBI,GAAQC,SAASC,iBAAiB,cAEhCC,QAAQ,cACER,EAAMC,EAAaD,EAAKS,WAAW,UAAUb,SCTlD,QAASc,GAAYf,MAC5BP,cAECA,IAAOO,GACJA,EAAOgB,eAAevB,MACbO,EAAQP,KAIVO,GCXnB,QAASiB,QAAGC,uEAEIA,EAAQC,YAGVD,EAAQC,gBJNtB,GAAIxB"}